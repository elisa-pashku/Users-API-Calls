{"ast":null,"code":"var _jsxFileName = \"/Users/elisapashku/Desktop/React/api_call/src/Components/UsersPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { useHistory } from \"react-router-dom\";\nimport UsersList from \"./Components/UsersList\";\nimport UserForm from \"./Components/UserForm\";\nimport SingleUser from \"./Components/SingleUser\";\nexport default function UsersPage() {\n  const [error, setError] = useState(null);\n  const [loadingUsers, setLoadingUsers] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [currentUser, setCurrentUser] = useState([]);\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  function getUsers() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(res => res.json()).then(results => {\n      setUsers(results);\n    }).catch(error => {\n      setError(error);\n    }).finally(() => setLoadingUsers(false));\n  }\n\n  function handleDetails(id) {\n    const newUsers = users.map(u => ({ ...u\n    }));\n    const index = newUsers.findIndex(user => user.id === id);\n    setCurrentUser(newUsers[index]);\n  }\n\n  function handleDelete(id) {\n    setUsers(isDeletingUser(id, true));\n    fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n      method: \"DELETE\"\n    }).then(() => {\n      getUsers();\n    }).catch(err => {\n      setUsers(isDeletingUser(id, false));\n    });\n  }\n\n  function isDeletingUser(id, loadingDelete) {\n    const newUsers = users.map(p => [...p]);\n    const index = users.findIndex(user => user.id === id);\n    newUsers[index].isLoadingDelete = loadingDelete;\n    return newUsers;\n  }\n\n  return /*#__PURE__*/React.createElement(UsersList, {\n    error: error,\n    setError: setError,\n    loadingUsers: loadingUsers,\n    setLoadingUsers: setLoadingUsers,\n    users: users,\n    setUsers: setUsers,\n    getUsers: getUsers,\n    handleDelete: handleDelete,\n    isDeletingUser: isDeletingUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/elisapashku/Desktop/React/api_call/src/Components/UsersPage.js"],"names":["React","useState","useEffect","useHistory","UsersList","UserForm","SingleUser","UsersPage","error","setError","loadingUsers","setLoadingUsers","users","setUsers","currentUser","setCurrentUser","getUsers","fetch","then","res","json","results","catch","finally","handleDetails","id","newUsers","map","u","index","findIndex","user","handleDelete","isDeletingUser","method","err","loadingDelete","p","isLoadingDelete"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nimport { useHistory } from \"react-router-dom\";\nimport UsersList from \"./Components/UsersList\";\nimport UserForm from \"./Components/UserForm\";\nimport SingleUser from \"./Components/SingleUser\";\n\nexport default function UsersPage() {\n  const [error, setError] = useState(null);\n  const [loadingUsers, setLoadingUsers] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [currentUser, setCurrentUser] = useState([]);\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  function getUsers() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((results) => {\n        setUsers(results);\n      })\n      .catch((error) => {\n        setError(error);\n      })\n      .finally(() => setLoadingUsers(false));\n  }\n\n  function handleDetails(id) {\n    const newUsers = users.map((u) => ({ ...u }));\n    const index = newUsers.findIndex((user) => user.id === id);\n    setCurrentUser(newUsers[index]);\n  }\n\n  function handleDelete(id) {\n    setUsers(isDeletingUser(id, true));\n    fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n      method: \"DELETE\",\n    })\n      .then(() => {\n        getUsers();\n      })\n      .catch((err) => {\n        setUsers(isDeletingUser(id, false));\n      });\n  }\n\n  function isDeletingUser(id, loadingDelete) {\n    const newUsers = users.map((p) => [...p]);\n    const index = users.findIndex((user) => user.id === id);\n    newUsers[index].isLoadingDelete = loadingDelete;\n    return newUsers;\n  }\n\n  return (\n    <UsersList\n      error={error}\n      setError={setError}\n      loadingUsers={loadingUsers}\n      setLoadingUsers={setLoadingUsers}\n      users={users}\n      setUsers={setUsers}\n      getUsers={getUsers}\n      handleDelete={handleDelete}\n      isDeletingUser={isDeletingUser}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}