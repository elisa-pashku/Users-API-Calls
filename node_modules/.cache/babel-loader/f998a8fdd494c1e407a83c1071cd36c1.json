{"ast":null,"code":"var _jsxFileName = \"/Users/elisapashku/Desktop/React/api_call/src/Components/UsersList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Table, Row, Container, Col, Button } from \"react-bootstrap\";\nimport \"../App.css\";\nimport UserForm from \"./UserForm\";\nimport SingleUser from \"./SingleUser\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction UsersList() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [users, setUsers] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(res => res.json()).then(results => {\n      setIsLoaded(true);\n      setUsers(results);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  function handleDelete(id) {\n    //const newUsers = users.filter((user) => user.id !== id);\n    //setUsers(newUsers);\n    setIsLoaded(false);\n    fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\n      method: \"DELETE\"\n    }).then(res => {\n      const newUsers = users.filter(user => user.id !== id);\n      setUsers(newUsers);\n    });\n    setIsLoaded(true);\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 12\n      }\n    }, \"Error: \", error.message);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 12\n      }\n    }, \"Loading\");\n  } else {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"mt-4 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, \"My api calls\")), /*#__PURE__*/React.createElement(Col, {\n      className: \"text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"Create new user\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, \"UserName\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, \"Website\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, users.map(user => /*#__PURE__*/React.createElement(SingleUser, {\n      key: user.id,\n      user: user,\n      handleDelete: handleDelete,\n      initialValues: {\n        name: user.name,\n        username: user.username,\n        email: user.email,\n        website: user.website,\n        phone: user.phone\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }))))));\n  }\n}\n\nexport default UsersList;","map":{"version":3,"sources":["/Users/elisapashku/Desktop/React/api_call/src/Components/UsersList.js"],"names":["React","useEffect","useState","Table","Row","Container","Col","Button","UserForm","SingleUser","useHistory","UsersList","error","setError","isLoaded","setIsLoaded","users","setUsers","history","fetch","then","res","json","results","handleDelete","id","method","newUsers","filter","user","message","map","name","username","email","website","phone"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Table, Row, Container, Col, Button } from \"react-bootstrap\";\nimport \"../App.css\";\nimport UserForm from \"./UserForm\";\nimport SingleUser from \"./SingleUser\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction UsersList() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [users, setUsers] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then(\n        (results) => {\n          setIsLoaded(true);\n          setUsers(results);\n        },\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, []);\n\n  function handleDelete(id) {\n    //const newUsers = users.filter((user) => user.id !== id);\n    //setUsers(newUsers);\n\n    setIsLoaded(false);\n    fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\n      method: \"DELETE\",\n    }).then((res) => {\n      const newUsers = users.filter((user) => user.id !== id);\n      setUsers(newUsers);\n    });\n\n    setIsLoaded(true);\n  }\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading</div>;\n  } else {\n    return (\n      <Container>\n        <Row className=\"mt-4 mb-4\">\n          <Col className=\"text-center\">\n            <h1>My api calls</h1>\n          </Col>\n\n          <Col className=\"text-right\">\n            <Button>Create new user</Button>\n          </Col>\n        </Row>\n        <Row>\n          <Table>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>First Name</th>\n                <th>UserName</th>\n                <th>Website</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {users.map((user) => (\n                <SingleUser\n                  key={user.id}\n                  user={user}\n                  handleDelete={handleDelete}\n                  initialValues={{\n                    name: user.name,\n                    username: user.username,\n                    email: user.email,\n                    website: user.website,\n                    phone: user.phone,\n                  }}\n                />\n              ))}\n            </tbody>\n          </Table>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default UsersList;\n"]},"metadata":{},"sourceType":"module"}