{"ast":null,"code":"var _jsxFileName = \"/Users/elisapashku/Desktop/React/api_call/src/Components/UsersPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport UsersList from \"./UsersList\";\nimport { Button } from \"react-bootstrap\";\nexport default function UsersPage() {\n  const [error, setError] = useState(null);\n  const [loadingUsers, setLoadingUsers] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [currentUser, setCurrentUser] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [usersPerPage, setUsersPerPage] = useState(3);\n  useEffect(() => {\n    getUsers();\n  }, []); //Get Current Users\n\n  const indexOfLastUser = currentPage * usersPerPage;\n  const indexOfFirstUser = indexOfLastUser - usersPerPage;\n\n  function handleUsersPerPageChange(e) {\n    setUsersPerPage(e.target.value);\n\n    if (currentPage === 1) {\n      return getUsers(e.target.value);\n    }\n\n    setCurrentPage(1);\n  }\n\n  function goToPrevPage() {\n    if (currentPage === 1) {\n      return;\n    }\n\n    setCurrentPage(currentPage - 1);\n  }\n\n  function getUsers() {\n    fetch(\"https://jsonplaceholder.typicode.com/users?_limit=${}\").then(res => res.json()).then(results => {\n      setUsers(results);\n    }).catch(error => {\n      setError(error);\n    }).finally(() => setLoadingUsers(false));\n  }\n\n  function handleDetails(id) {\n    const newUsers = users.map(u => ({ ...u\n    }));\n    const index = newUsers.findIndex(user => user.id === id);\n    setCurrentUser(newUsers[index]);\n  }\n\n  function handleDelete(id) {\n    setUsers(isDeletingUser(id, true));\n    fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n      method: \"DELETE\"\n    }).then(() => {\n      getUsers();\n    }).catch(err => {\n      setUsers(isDeletingUser(id, false));\n    });\n  }\n\n  function isDeletingUser(id, loadingDelete) {\n    const newUsers = users.map(p => ({ ...p\n    }));\n    const index = users.findIndex(user => user.id === id);\n    newUsers[index].isLoadingDelete = loadingDelete;\n    return newUsers;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UsersList, {\n    error: error,\n    setError: setError,\n    loadingUsers: loadingUsers,\n    setLoadingUsers: setLoadingUsers,\n    users: users,\n    setUsers: setUsers,\n    getUsers: getUsers,\n    handleDelete: handleDelete,\n    isDeletingUser: isDeletingUser,\n    handleDetails: handleDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"btns\",\n    onClick: goToPrevPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, \"Prev\"), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, \"Next\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleUsersPerPageChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"5\")));\n}","map":{"version":3,"sources":["/Users/elisapashku/Desktop/React/api_call/src/Components/UsersPage.js"],"names":["React","useState","useEffect","useHistory","UsersList","Button","UsersPage","error","setError","loadingUsers","setLoadingUsers","users","setUsers","currentUser","setCurrentUser","currentPage","setCurrentPage","usersPerPage","setUsersPerPage","getUsers","indexOfLastUser","indexOfFirstUser","handleUsersPerPageChange","e","target","value","goToPrevPage","fetch","then","res","json","results","catch","finally","handleDetails","id","newUsers","map","u","index","findIndex","user","handleDelete","isDeletingUser","method","err","loadingDelete","p","isLoadingDelete"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport UsersList from \"./UsersList\";\nimport { Button } from \"react-bootstrap\";\n\nexport default function UsersPage() {\n  const [error, setError] = useState(null);\n  const [loadingUsers, setLoadingUsers] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [currentUser, setCurrentUser] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [usersPerPage, setUsersPerPage] = useState(3);\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  //Get Current Users\n  const indexOfLastUser = currentPage * usersPerPage;\n  const indexOfFirstUser = indexOfLastUser - usersPerPage;\n\n  function handleUsersPerPageChange(e) {\n    setUsersPerPage(e.target.value);\n    if (currentPage === 1) {\n      return getUsers(e.target.value);\n    }\n    setCurrentPage(1);\n  }\n  function goToPrevPage() {\n    if (currentPage === 1) {\n      return;\n    }\n    setCurrentPage(currentPage - 1);\n  }\n\n  function getUsers() {\n    fetch(\"https://jsonplaceholder.typicode.com/users?_limit=${}\")\n      .then((res) => res.json())\n      .then((results) => {\n        setUsers(results);\n      })\n      .catch((error) => {\n        setError(error);\n      })\n      .finally(() => setLoadingUsers(false));\n  }\n\n  function handleDetails(id) {\n    const newUsers = users.map((u) => ({ ...u }));\n    const index = newUsers.findIndex((user) => user.id === id);\n    setCurrentUser(newUsers[index]);\n  }\n\n  function handleDelete(id) {\n    setUsers(isDeletingUser(id, true));\n    fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n      method: \"DELETE\",\n    })\n      .then(() => {\n        getUsers();\n      })\n      .catch((err) => {\n        setUsers(isDeletingUser(id, false));\n      });\n  }\n\n  function isDeletingUser(id, loadingDelete) {\n    const newUsers = users.map((p) => ({ ...p }));\n    const index = users.findIndex((user) => user.id === id);\n    newUsers[index].isLoadingDelete = loadingDelete;\n    return newUsers;\n  }\n\n  return (\n    <>\n      <UsersList\n        error={error}\n        setError={setError}\n        loadingUsers={loadingUsers}\n        setLoadingUsers={setLoadingUsers}\n        users={users}\n        setUsers={setUsers}\n        getUsers={getUsers}\n        handleDelete={handleDelete}\n        isDeletingUser={isDeletingUser}\n        handleDetails={handleDetails}\n      />\n\n      <Button className=\"btns\" onClick={goToPrevPage}>\n        Prev\n      </Button>\n      <Button>Next</Button>\n      <select onChange={handleUsersPerPageChange}>\n        <option value={2}>2</option>\n        <option value={3}>3</option>\n        <option value={4}>4</option>\n        <option value={5}>5</option>\n      </select>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}